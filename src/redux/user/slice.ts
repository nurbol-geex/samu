import {createSlice} from '@reduxjs/toolkit';
import {userInitialState} from './initialState';
import {
  setCreateAccountFormReducer,
  resetCreateAccountFormReducer,
  signUpRequestReducer,
  signUpSuccessReducer,
  signUpFailureReducer,
  loginRequestReducer,
  socialAuthRequestReducer,
  socialAuthRFailureReducer,
  socialAuthRSuccessReducer,
  loginSuccessReducer,
  setGuestLoginReducer,
  loginFailureReducer,
  phoneConfirmRequestReducer,
  phoneConfirmSuccessReducer,
  phoneConfirmFailureReducer,
  reverseGeocodingRequestReducer,
  reverseGeocodingSuccessReducer,
  reverseGeocodingFailureReducer,
  setCreateAddressFormReducer,
  resetCreateAddressFormReducer,
  createAddressRequestReducer,
  createAddressSuccessReducer,
  createAddressFailureReducer,
  setUserReducer,
  deleteAccountSuccessReducer,
  deleteAccountFailureReducer,
  resetUserReducer,
  deleteAccountRequestReducer,
  getAddressRequestReducer,
  getAddressFailureReducer,
  getAddressSuccessReducer,
  setUserAddressReducer,
  updateAddressRequestReducer,
  updateAddressSuccessReducer,
  updateAddressFailureReducer,
  deleteAddressRequestReducer,
  deleteAddressSuccessReducer,
  deleteAddressFailureReducer,
  deleteUserAddressReducer,
  getAnalyticsFailureReducer,
  getAnalyticsSuccessReducer,
  getAnalyticsRequestReducer,
  updateProfileRequestReducer,
  updateProfileSuccessReducer,
  updateProfileFailureReducer,
  getHelpDeskRequestReducer,
  getHelpDeskSuccessReducer,
  getHelpDeskFailureReducer
} from './reducers';
import {USER} from './constants';

export const userSlice = createSlice({
  name: USER,
  initialState: userInitialState,
  reducers: {
    analyticsFailure: getAnalyticsFailureReducer,
    analyticsSuccess: getAnalyticsSuccessReducer,
    analyticsRequest: getAnalyticsRequestReducer,
    
    getHelpDeskRequest :getHelpDeskRequestReducer,
    getHelpDeskSuccess:getHelpDeskSuccessReducer,
    getHelpDeskFailure:getHelpDeskFailureReducer,
    setIsGuest:setGuestLoginReducer,
    setUser: setUserReducer,
    resetUser: resetUserReducer,
    setCreateAccountForm: setCreateAccountFormReducer,
    resetCreateAccountForm: resetCreateAccountFormReducer,
    signUpRequest: signUpRequestReducer,
    signUpSuccess: signUpSuccessReducer,
    signUpFailure: signUpFailureReducer,
    socialAuthRequest: socialAuthRequestReducer,
    socialAuthFailure: socialAuthRFailureReducer,
    socialAuthSuccess: socialAuthRSuccessReducer,
    loginRequest: loginRequestReducer,
    loginSuccess: loginSuccessReducer,
    loginFailure: loginFailureReducer,
    phoneConfirmRequest: phoneConfirmRequestReducer,
    phoneConfirmSuccess: phoneConfirmSuccessReducer,
    phoneConfirmFailure: phoneConfirmFailureReducer,
    setCreateAddressForm: setCreateAddressFormReducer,
    resetCreateAddressForm: resetCreateAddressFormReducer,
    setUserAddress: setUserAddressReducer,
    reverseGeocodingRequest: reverseGeocodingRequestReducer,
    reverseGeocodingSuccess: reverseGeocodingSuccessReducer,
    reverseGeocodingFailure: reverseGeocodingFailureReducer,
    createAddressRequest: createAddressRequestReducer,
    createAddressSuccess: createAddressSuccessReducer,
    createAddressFailure: createAddressFailureReducer,
    updateAddressRequest: updateAddressRequestReducer,
    updateAddressSuccess: updateAddressSuccessReducer,
    updateAddressFailure: updateAddressFailureReducer,
    deleteAddressRequest: deleteAddressRequestReducer,
    deleteAddressSuccess: deleteAddressSuccessReducer,
    deleteAddressFailure: deleteAddressFailureReducer,
    deleteUserAddress: deleteUserAddressReducer,
    deleteAccountRequest: deleteAccountRequestReducer,
    deleteAccountSuccess: deleteAccountSuccessReducer,
    deleteAccountFailure: deleteAccountFailureReducer,
    updateProfileRequest: updateProfileRequestReducer,
    updateProfileSuccess: updateProfileSuccessReducer,
    updateProfileFailure: updateProfileFailureReducer,
    getAddressRequest: getAddressRequestReducer,
    getAddressSuccess: getAddressSuccessReducer,
    getAddressFailure: getAddressFailureReducer,
  },
});

export const {
  setIsGuest,
  getHelpDeskRequest,
  getHelpDeskSuccess,
  getHelpDeskFailure,
  setUser,
  resetUser,
  setCreateAccountForm,
  resetCreateAccountForm,
  signUpRequest,
  signUpSuccess,
  signUpFailure,
  socialAuthFailure,
  socialAuthRequest,
  socialAuthSuccess,
  loginRequest,
  loginSuccess,
  loginFailure,
  phoneConfirmRequest,
  phoneConfirmSuccess,
  phoneConfirmFailure,
  setCreateAddressForm,
  resetCreateAddressForm,
  reverseGeocodingRequest,
  setUserAddress,
  reverseGeocodingSuccess,
  reverseGeocodingFailure,
  createAddressRequest,
  createAddressSuccess,
  createAddressFailure,
  updateAddressRequest,
  updateAddressSuccess,
  updateAddressFailure,
  deleteAddressRequest,
  deleteAddressSuccess,
  deleteAddressFailure,
  updateProfileRequest,
  updateProfileSuccess,
  updateProfileFailure,
  deleteUserAddress,
  deleteAccountRequest,
  deleteAccountSuccess,
  deleteAccountFailure,
  getAddressRequest,
  getAddressSuccess,
  getAddressFailure,
  analyticsFailure,
  analyticsSuccess,
  analyticsRequest
} = userSlice.actions;
export default userSlice.reducer;
